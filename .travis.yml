dist: xenial

sudo: false

language: cpp

matrix:
  include:
    - os: linux
      addons:
          apt:
              sources:
                - ubuntu-toolchain-r-test
              packages:
                - g++-8
                - cmake
                - libgtest-dev
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: linux
      addons:
          apt:
              sources:
                - llvm-toolchain-trusty-7.0
              packages:
                - clang-7.0
                - cmake
                - libgtest-dev
      env:
         - MATRIX_EVAL="CC=clang-7.0 && CXX=clang++-7.0"

    - os: osx
      osx_image: xcode10.1
      addons:
          brew:
              packages:
                - cmake
      env:
         - MATRIX_EVAL="CC=gcc-8 && CXX=g++-8"

    - os: osx
      osx_image: xcode10.1
      addons:
          brew:
              packages:
                - cmake
      env:
        - MATRIX_EVAL="CC=clang && CXX=clang++"

before_install:
    - eval "${MATRIX_EVAL}"
    - echo $CC
    - echo $CXX
    - cd gtest
    - sudo cmake CMakeLists.txt -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -std=c++17 .
    - sudo make
    - sudo make install
    - if [ $TRAVIS_OS_NAME = linux ]; then sudo cp *.a /usr/lib; fi
    - cd -

install:
    - if [ $TRAVIS_OS_NAME = osx ]; then brew install lcov; fi

script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=coverage -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DUNIT_TESTING=true ..
    - make && make test

after_success:
    - |
        if [ $TRAVIS_OS_NAME = osx ] && [ $CXX = clang++ ]; then
            lcov --capture --directory . --output-file coverage.info
            lcov --remove coverage.info '/usr/*' --output-file coverage.info
            lcov --list coverage.info
            bash <(curl -s https://codecov.io/bash) -t "57886efc-8eca-416f-9e8b-1b0ee825efe5" -f coverage.info || echo "Codecov did not collect coverage reports"
        fi

notifications:
  email:
    - fjmw201@exeter.ac.uk
