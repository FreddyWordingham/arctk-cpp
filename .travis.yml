dist: xenial

sudo: false

language: cpp

matrix:
  include:
    - os: linux
      addons:
          apt:
              sources:
                - ubuntu-toolchain-r-test
              packages:
                - cmake
                - g++-8
                - libgtest-dev
      env:
        - CC=gcc-8
        - CCX=g++-8
        - ARCTK_BUILD_TYPE=debug

    - os: linux
      addons:
          apt:
              sources:
                - llvm-toolchain-trusty-7.0
              packages:
                - cmake
                - clang
                - libgtest-dev
      env:
        - CC=clang-7
        - CXX=clang++-7
        - ARCTK_BUILD_TYPE=debug

    - os: osx
      osx_image: xcode10.1
      addons:
          brew:
              packages:
                - cmake
                - gcc
      env:
        - CC=gcc-8
        - CCX=g++-8
        - ARCTK_BUILD_TYPE=debug

    - os: osx
      osx_image: xcode10.1
      addons:
          brew:
              packages:
                - cmake
                - llvm
      env:
        - CC=clang-7
        - CXX=clang++-7
        - ARCTK_BUILD_TYPE=debug

    - os: osx
      osx_image: xcode10.1
      addons:
          brew:
              packages:
                - cmake
                - llvm
      env:
        - CC=clang-7
        - CXX=clang++-7
        - ARCTK_BUILD_TYPE=coverage

before_install:
    - eval "${MATRIX_EVAL}"
    - echo $TRAVIS_OS_NAME
    - echo $CC
    - which $CC
    - $CC --version
    - echo $CXX
    - which $CXX
    - $CXX --version
    - |
        if [ $TRAVIS_OS_NAME = linux ]; then 
            cd /usr/src/gtest
            sudo cmake CMakeLists.txt
            sudo make
            sudo cp *.a /usr/lib
            cd -
        elif [ $TRAVIS_OS_NAME = osx ]; then
            cd gtest
            sudo cmake CMakeLists.txt -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -std=c++17 .
            sudo make
            sudo make install
            cd -
        fi

install:
    - if [ $ARCTK_BUILD_TYPE = coverage ]; then brew install lcov; fi

script:
    - mkdir build
    - cd build
    - cmake -DCMAKE_BUILD_TYPE=$ARCTK_BUILD_TYPE -DCMAKE_C_COMPILER=$CC -DCMAKE_CXX_COMPILER=$CXX -DUNIT_TESTING=true ..
    - make && make test

after_success:
    - |
        if [ $ARCTK_BUILD_TYPE = coverage ]; then
            lcov --capture --directory . --output-file coverage.info
            lcov --remove coverage.info '/usr/*' --output-file coverage.info
            lcov --list coverage.info
            bash <(curl -s https://codecov.io/bash) -t "57886efc-8eca-416f-9e8b-1b0ee825efe5" -f coverage.info || echo "Codecov did not collect coverage reports"
        fi

notifications:
  email:
    - fjmw201@exeter.ac.uk
